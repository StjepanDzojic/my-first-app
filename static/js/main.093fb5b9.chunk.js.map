{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","href","Counter","this","props","children","getBadgeClasses","formatCount","onClick","onIncrement","counter","onDelete","id","classes","value","Component","Counters","onReset","counters","map","App","state","handleDelete","counterId","filter","c","setState","handleIncrement","index","indexOf","handleReset","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAgBeA,G,OAdA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cACb,OACI,qBAAKC,UAAU,+BAAf,SACA,oBAAGA,UAAU,eAAeC,KAAK,IAAjC,mBAEI,sBAAMD,UAAU,mCAAhB,SACED,WCmBCG,E,uKAvBD,IAAD,OACL,OACE,gCACGC,KAAKC,MAAMC,SACZ,sBAAML,UAAWG,KAAKG,kBAAtB,SAA0CH,KAAKI,gBAC/C,wBAAQC,QAAU,kBAAK,EAAKJ,MAAMK,YAAY,EAAKL,MAAMM,UAAUV,UAAU,2BAA7E,uBACA,wBAAQQ,QAAS,kBAAM,EAAKJ,MAAMO,SAAS,EAAKP,MAAMM,QAAQE,KAAKZ,UAAU,4BAA7E,yB,wCAMJ,IAAIa,EAAU,mBAEd,OADAA,GAAwC,IAA7BV,KAAKC,MAAMM,QAAQI,MAAc,UAAY,Y,oCAI9C,IACHA,EAASX,KAAKC,MAAMM,QAApBI,MACP,OAAiB,IAAVA,EAAc,OAASA,M,GArBhBC,aCsBPC,E,uKAnBD,IAAD,EAC2Cb,KAAKC,MAA9Ca,EADF,EACEA,QAAQC,EADV,EACUA,SAASP,EADnB,EACmBA,SAASF,EAD5B,EAC4BA,YAEjC,OACA,gCACI,wBAAQD,QAASS,EAASjB,UAAU,6BAApC,mBACCkB,EAASC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAEAC,SAAUA,EACVF,YAAaA,EACbC,QAAWA,GAHNA,EAAQE,c,GAVNG,aCqDRK,G,mNAjDbC,MAAQ,CACNH,SAAU,CACN,CAACN,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,K,EAMvBQ,aAAe,SAAAC,GACf,IAAML,EAAW,EAAKG,MAAMH,SAASM,QAAO,SAAAC,GAAC,OAAIA,EAAEb,KAAOW,KAC1D,EAAKG,SAAS,CAACR,SAAUA,K,EAGzBS,gBAAkB,SAAAjB,GAClB,IAAMQ,EAAQ,YAAO,EAAKG,MAAMH,UAC1BU,EAAQV,EAASW,QAAQnB,GAC/BQ,EAASU,GAAT,eAAsBlB,GACtBQ,EAASU,GAAOd,QAChB,EAAKY,SAAS,CAACR,c,EAIfY,YAAa,WACb,IAAMZ,EAAW,EAAKG,MAAMH,SAASC,KAAI,SAAAM,GAEvC,OADAA,EAAEX,MAAQ,EACHW,KAET,EAAKC,SAAS,CAACR,c,uDAGb,OACE,eAAC,IAAMa,SAAP,WACE,cAAC,EAAD,CAAQhC,cAAiBI,KAAKkB,MAAMH,SAASM,QAAO,SAAAC,GAAC,OAAIA,EAAEX,MAAM,KAAGkB,SACpE,sBAAMhC,UAAY,YAAlB,SACE,cAAC,EAAD,CACEkB,SAAYf,KAAKkB,MAAMH,SACvBD,QAASd,KAAK2B,YACdrB,YAAaN,KAAKwB,gBAClBhB,SAAUR,KAAKmB,wB,GA1CPP,cCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.093fb5b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst NavBar = ({totalCounters}) =>{\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n            Navbar \n            <span className='badge badge-pill badge-secondary'>\n             {totalCounters}\n            </span>\n        \n        </a>\n      </nav> );\n};\n\n \nexport default NavBar;","import React, { Component } from 'react';\n\nclass Counter extends Component {\n\n    render() {\n        return (\n          <div>\n            {this.props.children}\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n            <button onClick={ () =>this.props.onIncrement(this.props.counter)} className=\"btn btn-secondary btn-sm\">Increment</button>\n            <button onClick={() => this.props.onDelete(this.props.counter.id)} className='btn btn-danger btn-sm m-2'>Delete</button>\n          </div>\n        );\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount(){\n        const {value} = this.props.counter;\n        return value === 0 ? 'Zero' : value;\n    }\n}\n \nexport default Counter;","import React, { Component } from 'react';\nimport Counter from './counter'\n\nclass Counters extends Component {\n\n    render() { \n        const {onReset,counters,onDelete,onIncrement} = this.props;\n\n        return ( \n        <div>\n            <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">Reset</button>\n            {counters.map(counter => (\n                <Counter\n                key={counter.id}\n                onDelete={onDelete}\n                onIncrement={onIncrement}\n                counter = {counter}\n                />\n            ))}\n           \n        </div> );\n    }\n}\n \nexport default Counters;","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  state = {  \n    counters: [\n        {id: 1, value: 4},\n        {id: 2, value: 0},\n        {id: 3, value: 0},\n        {id: 4, value: 0}\n    ]\n}\n\n\n\nhandleDelete = counterId =>{\nconst counters = this.state.counters.filter(c => c.id !== counterId); //pravimo novi array counters sa svim arrayevima osim onog ciji je id, teoretski izbacujemo array ciji je je id\nthis.setState({counters: counters});\n}\n\nhandleIncrement = counter =>{\nconst counters = [...this.state.counters];\nconst index = counters.indexOf(counter);\ncounters[index] = {...counter};\ncounters[index].value++;\nthis.setState({counters});\n\n}\n\nhandleReset= () =>{\nconst counters = this.state.counters.map(c => {\n  c.value = 0;\n  return c;\n})\nthis.setState({counters});\n}\n  render(){\n  return (\n    <React.Fragment>\n      <NavBar totalCounters = {this.state.counters.filter(c => c.value>0).length}/>\n      <main className = \"container\">\n        <Counters\n          counters = {this.state.counters}\n          onReset={this.handleReset}\n          onIncrement={this.handleIncrement}\n          onDelete={this.handleDelete}\n        />\n      </main>\n    </React.Fragment>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}